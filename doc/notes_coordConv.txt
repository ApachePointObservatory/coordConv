Issues:
- apptopo coordinates: the amount of refraction looks too small to me: 4 arcsec at 10 degrees altitude
  whereas I think it should be closer to 320 arcsec.
  But then why does the comparison to the TCC work?
  
  TCC refco = 1.207482456409440E-002, -1.301143002747654E-005 deg
             = 0.00021074544524413635, -2.270922943723219e-07 rad
             
  The results look better if I use refCo in degrees, so I suspect that is what I have done in coordConv
  but that I have mis-documented it. I *should* use degrees because that's what the old TCC did
  and it is easier to keep it straight if they agree.

To do:
- Add more methods that work with PVTCoord, once I figure out what is required.
  Candidates include:
  - PVTCoord.angularSeparation (arguments are PVTCoords; result is PVT)
  - PVTCoord.angleTo (argument is PVTCoord; result is PVT)
  Perhaps wait until I have a need for these?
- Consider having PVT be included by mathUtils, so that the scalar and PVT flavors of functions can be defined in the same file.

Unit tests to add:
- site.setPoleWander
- PVTCoord and CoordSys.convertFrom variants that use PVTCoord.
- Untested PVT functionality, such as unary minus and setFromPair (once I can call that from python)
- Unit test NoneCoordSys and MountCoordSys
- Unit test makeCoordSys

SWIG questions:
- Learn to call PVT.setFromPair from Python
- Figure out how to make a PVT & argument a return value in SWIG
  (e.g. PVTCoord.getSphPVT should probably return two values, not fill two values)
